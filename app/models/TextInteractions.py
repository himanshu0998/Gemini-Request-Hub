"""
A SQLAlchemy model representing user text interaction records in the database.

This model defines the structure of the 'usertextinteractions' table, which is used to store interactions between users and a text-based service or feature. Each interaction record includes details about the user, the type and content of the input, timestamps for both input and output, the content of the response generated by the system, and the status of the interaction.

Attributes:
    __tablename__ (str): The name of the table in the database, set to 'usertextinteractions'.
    username (Column): A String column storing the username of the user who initiated the interaction. It is part of the primary key.
    input_type (Column): A String column indicating the type of input (e.g., 'chat', 'prompt'), limited to 10 characters.
    input_content (Column): A Text column containing the text input provided by the user.
    input_timestamp (Column): A DateTime column recording the time when the input was received. It is part of the primary key.
    output_content (Column): A Text column containing the text response generated by the system or service.
    output_timestamp (Column): A DateTime column recording the time when the output was generated.
    status (Column): A String column indicating the status of the interaction (e.g., 'Processed', 'Failed'), limited to 10 characters.

Usage:
    This class is designed to facilitate the recording and querying of user interactions with text-based services or features within an application. It supports detailed logging of each interaction, including both the request and response components, which can be valuable for analytics, auditing, and debugging purposes.
"""


from database import Base
from sqlalchemy import Column, Integer, String, Text, DateTime

class UserTextInteractions(Base):
    __tablename__ = 'usertextinteractions'
    username = Column(String(50), primary_key=True, nullable=False)
    input_type = Column(String(10), nullable=False)
    input_content = Column(Text, nullable=False)  # Suitable for long text
    input_timestamp = Column(DateTime, primary_key=True, nullable=False)
    output_content = Column(Text, nullable=False)
    output_timestamp = Column(DateTime, nullable=False)
    status = Column(String(10), nullable=False)